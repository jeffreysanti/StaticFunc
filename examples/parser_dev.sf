#typedef A int32;
#typedef X mut int32;
#typedef B tuple<A, int32:named, A>;
#typedef C vector<A>;
//#typedef B dict<string, A>;


#typedef funcptr function<void, int8>;

#typelistadd INT int8,int32,int16,int64;
#typelistadd INT string, int32;

int8 x(4);
int8 y(16);

def INT fibr(INT n, bool stop)
{
	if(n == 1 | n == 2)
		return 1;
	return fib(n - 1) + fib(n - 2);
}

def int32 fibx(int32 n)
{
	return n;
}

int32 a(fibr(8));
